---
# task install
- assert:
    that:
      - "ansible_version.full < '2.6.0'"
    msg: "Ansible version must be less than 2.6.0"

- name: disable selinux
  selinux:
    state: disabled

- name: install dependencies
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - docker
    - docker-python
    - git

- name: configure docker service
  service:
    name: docker
    enabled: yes
    state: started

- name: clone eyesofindicator git project
  git:
    repo: "{{ eoi_repo }}"
    dest: "{{ eoi_repo_dir }}"
    version: "{{ eoi_version }}"
    update: "{{ eoi_keep_updated }}"
    force: yes
    accept_hostkey: yes

- name: build docker image
  docker_image:
    path: "{{ eoi_repo_dir }}"
    name: "{{ eoi_image }}"
    tag: "{{ eoi_version }}"

- name: create required directories
  file:
    path: "{{ item }}"
    mode: 0755
    state: directory
    owner: root
    group: root
  with_items:
    - "{{ eoi_install_dir }}"
    - "{{ eoi_install_dir }}/{{ eoi_container }}"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/assets"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/dashboards"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/config"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/jobs"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/lib-eoi"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/widgets"
    - "{{ eoi_install_dir }}/{{ eoi_container }}/public"

- name: eonapi key retrieved
  uri:
    url: "https://{{ ansible_default_ipv4.address }}/eonapi/getApiKey?&username={{ eon_user }}&password={{ eon_password }}"
    body_format: json
    validate_certs: no
    headers:
      Content-Type: "application/json"
  register: request_key

- name: EON Token validated
  uri:
    url: "https://{{ ansible_default_ipv4.address }}/eonapi/getAuthenticationStatus?&username={{ eon_user }}&apiKey={{ request_key.json.EONAPI_KEY }}"
    body_format: json
    validate_certs: no
    headers:
      Content-Type: "application/json"
  register: validate

- debug:
    msg: "EONAPI KEY for user {{ eon_user }} on host {{ ansible_default_ipv4.address }}: {{ validate.json.status }}"

- name: Copy static files
  copy:
    src: "{{ role_path }}/files/defaults/"
    dest: "{{ eoi_install_dir }}/{{ eoi_container }}/"

- name: Modify jobs with TOKEN
  template:
    src: "jobs/eon.rb.j2"
    dest: "{{ eoi_install_dir }}/{{ eoi_container }}/jobs/eon.rb"

- name: run docker container
  docker_container:
    name: "{{ eoi_container }}"
    image: "{{ eoi_image }}:{{ eoi_version }}"
    state: started
    restart_policy: always
    ports:
    - "{{ eoi_port }}:3030"
    env:
      APKS: "{{ eoi_apks }}"
      GEMS: "{{ eoi_gems }}"
      WIDGETS: "{{ eoi_widgets }}"
    volumes:
      - "{{ eoi_install_dir }}/{{ eoi_container }}/assets:/assets"
      - "{{ eoi_install_dir }}/{{ eoi_container }}/dashboards:/dashboards"
      - "{{ eoi_install_dir }}/{{ eoi_container }}/config:/config"
      - "{{ eoi_install_dir }}/{{ eoi_container }}/jobs:/jobs"
      - "{{ eoi_install_dir }}/{{ eoi_container }}/lib-eoi:/lib-eoi"
      - "{{ eoi_install_dir }}/{{ eoi_container }}/widgets:/widgets"
      - "{{ eoi_install_dir }}/{{ eoi_container }}/public:/public"
